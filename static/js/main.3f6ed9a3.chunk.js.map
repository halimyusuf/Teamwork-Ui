{"version":3,"sources":["components/createBtn.jsx","components/common/postInfo.jsx","utils/formatTime.js","components/postList.jsx","components/common/searchPost.jsx","components/common/pagination.jsx","services/logService.js","services/authServices.js","services/httpServices.js","services/postsServices.js","components/home.jsx","utils/sorting.js","utils/paginate.js","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/textarea.jsx","components/common/form.jsx","services/formSchema.js","components/comments.jsx","components/articleContent.jsx","components/articleForm.jsx","components/gifForm.jsx","components/gifContent.jsx","components/loginForm.jsx","services/signUpServices.js","components/signUpForm.jsx","components/footer.jsx","components/logout.jsx","components/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["CreateBtn","className","to","PostInfo","time","date","username","getDate","Date","toLocaleString","split","PostList","state","id","bool","this","props","allPosts","handleDel","handleFlag","spamPage","user","map","post","key","content","getLink","title","createdOn","author","authorId","Fragment","onClick","url","Component","Search","all","type","placeholder","Pagination","size","length","pages","Math","ceil","element","i","num","handlePag","init","log","error","console","jwtToken","getCurrentUser","decode","localStorage","getItem","loginWithJwt","token","setItem","getUrl","endpoint","apiUrl","data","a","http","login","register","axios","defaults","headers","common","interceptors","response","use","status","logger","toast","Promise","reject","get","patch","delete","getAllPosts","getArticle","saveArticle","article","articleClone","deleteArticle","reportArticleSpam","reportGifSpam","getGif","postGif","deleteGif","gifComment","Home","pageSize","currentPage","sortColumn","by","sortOrder","currSort","search","arg","posts","filter","p","setState","page","handleSort","index","nativeEvent","target","selectedIndex","current","value","handleType","handleSearch","currentTarget","handleSortOrder","e","renderSelectSort","ascSort","ascSortClass","descSort","descSortClass","onChange","name","row","match","path","spam","params","param","matchedPosts","toLowerCase","indexOf","sort","b","new_a","getTime","new_b","desc","items","pageNumber","startIndex","slice","paginate","totalCount","renderPosts","isPageSpam","Navbar","replace","isAdmin","Input","label","rest","htmlFor","Select","options","option","TextArea","Form","errors","validate","result","Joi","schema","abortEarly","details","item","message","handleSubmit","preventDefault","doSubmit","validateProperty","obj","handleChange","input","files","image","disabled","signUpSchema","firstName","string","min","required","lastName","email","password","regex","address","gender","jobRole","department","loginSchema","gifSchema","any","articleSchema","category","commentSchema","comment","Comment","articleId","gifId","handleComment","comments","action","onSubmit","renderTextArea","renderButton","src","alt","ArticleContent","ArticleForm","history","push","inputField","GifForm","FormData","append","success","GifContent","LoginForm","auth","window","location","err","withRouter","jobroles","departments","SignUpForm","selectField","Footer","href","Logout","removeItem","NotFound","App","component","exact","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f6ed9a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateBtn = () => {\r\n  return (\r\n    <div className=\"create-btn\">\r\n      <button>\r\n        {\" \"}\r\n        <Link to=\"/gif/new\">Create Gif</Link>{\" \"}\r\n      </button>\r\n      <button>\r\n        {\" \"}\r\n        <Link to=\"/article/new\">Create Article </Link>{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBtn;\r\n","import React from \"react\";\r\n\r\nconst PostInfo = ({ time, date, username }) => {\r\n  return (\r\n    <div className=\"comment_toolbar left-post-list\">\r\n      <div className=\"comment_details\">\r\n        <ul>\r\n          <li>\r\n            <i className=\"fa fa-clock-o\"></i> {time}\r\n          </li>\r\n          <li>\r\n            <i className=\"fa fa-calendar\"></i> {date}\r\n          </li>\r\n          <li>\r\n            <i className=\"fa fa-pencil\"></i>{\" \"}\r\n            <span className=\"user\">{username}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostInfo;\r\n","export function getDate(date) {\r\n    date = new Date(date)\r\n    date = date.toLocaleString()\r\n    return date.split(\", \")\r\n}","import React, { Component } from \"react\";\r\nimport PostInfo from \"./common/postInfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDate } from \"../utils/formatTime\";\r\nclass PostList extends Component {\r\n  state = {};\r\n  getLink(id, bool) {\r\n    return bool ? `/article/${id}` : `/gif/${id}`;\r\n  }\r\n\r\n  render() {\r\n    const { allPosts, handleDel, handleFlag, spamPage, user } = this.props;\r\n    return (\r\n      <section>\r\n        {allPosts.map(post => (\r\n          <div key={post.id} className=\"a-post-list\">\r\n            <div>\r\n              <p className=\"post-title\">\r\n                <span className=\"post-type\">\r\n                  {post.content ? \"Article\" : \"Gif\"}{\" \"}\r\n                </span>{\" \"}\r\n                &nbsp;\r\n                <Link to={this.getLink(post.id, post.content)}>\r\n                  {post.title}\r\n                </Link>\r\n              </p>\r\n            </div>\r\n            <PostInfo\r\n              date={getDate(post.createdOn)[0]}\r\n              time={getDate(post.createdOn)[1]}\r\n              username={post.author}\r\n            />\r\n\r\n            <div className=\"owner-access\">\r\n              <div>\r\n                {post.content && (\r\n                  <div>\r\n                    {user.id === post.authorId && (\r\n                      <React.Fragment>\r\n                        <Link to={`/edit/articles/${post.id}`}>\r\n                          <i className=\"fa fa-edit\"></i>\r\n                        </Link>\r\n                        <i\r\n                          onClick={() => handleDel(post.id, \"article\")}\r\n                          className=\"fa fa-trash\"\r\n                        ></i>\r\n                      </React.Fragment>\r\n                    )}\r\n                    {spamPage && (\r\n                      <i\r\n                        onClick={() => handleFlag(post.id, \"article\")}\r\n                        className=\"fa fa-flag\"\r\n                      ></i>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {post.url && (\r\n                  <div>\r\n                    {user.id === post.authorId && (\r\n                      <i\r\n                        onClick={() => handleDel(post.id, \"gif\")}\r\n                        className=\"fa fa-trash\"\r\n                      ></i>\r\n                    )}\r\n                    {spamPage && (\r\n                      <i\r\n                        onClick={() => handleFlag(post.id, \"gif\")}\r\n                        className=\"fa fa-flag\"\r\n                      ></i>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ ...all }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n            {...all}\r\n            type=\"search\"\r\n            className=\"form-control home-search\"\r\n            placeholder=\"Search\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Pagination extends Component {\r\n  state = {};\r\n  render() {\r\n    const { size, length } = this.props;\r\n\r\n    let pages = Math.ceil(length / size);\r\n    let element = [];\r\n    for (let i = 0; i < pages; i++) {\r\n      element[i] = i + 1;\r\n    }\r\n    if (element.length === 1) return null;\r\n    return (\r\n      <div className=\"pagination\">\r\n        <ul>\r\n          {element.map(num => (\r\n            <li key={num}>\r\n              <button onClick={() => this.props.handlePag(num)}>{num}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import http from './httpServices'\r\nimport {\r\n    apiUrl\r\n} from '../config.json'\r\nimport decode from \"jwt-decode\";\r\n\r\nconst jwtToken = \"token\"\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const user = decode(localStorage.getItem(jwtToken));\r\n        return user\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport function loginWithJwt(token) {\r\n    localStorage.setItem(jwtToken, token)\r\n}\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(\"token\");\r\n}\r\n\r\nfunction getUrl(endpoint) {\r\n    return `${apiUrl}auth/${endpoint}`\r\n}\r\n\r\nexport async function login(data) {\r\n    return await http.post(getUrl(\"signin\"), data)\r\n}\r\n\r\nexport async function register(data) {\r\n    return await http.post(getUrl(\"create-user\"), data)\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(\"token\")\r\n}\r\n\r\nexport default {\r\n    login,\r\n    register,\r\n    loginWithJwt,\r\n    getCurrentUser\r\n}","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport {\r\n  toast\r\n} from \"react-toastify\";\r\nimport {\r\n  getJwt\r\n} from \"./authServices\";\r\n\r\naxios.defaults.headers.common[\"tw-auth-token\"] = getJwt()\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\n\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  patch: axios.patch,\r\n  delete: axios.delete\r\n};","import http from \"./httpServices\"\r\nimport {\r\n    apiUrl\r\n} from \"../config.json\"\r\n\r\n\r\nexport function getAllPosts() {\r\n    return http.get(`${apiUrl}feeds`)\r\n}\r\n\r\n// ARTICLES\r\nexport function getArticles() {\r\n    return http.get(`${apiUrl}articles`)\r\n}\r\n\r\nexport function getArticle(id) {\r\n    return http.get(`${apiUrl}articles/${id}`)\r\n}\r\n\r\nexport function saveArticle(article) {\r\n    if (article.id) {\r\n        const articleClone = {\r\n            ...article\r\n        }\r\n        delete articleClone.id\r\n        return http.patch(`${apiUrl}articles/${article.id}`, articleClone)\r\n    }\r\n    return http.post(`${apiUrl}articles`, article)\r\n}\r\n\r\nexport function deleteArticle(id) {\r\n    return http.delete(`${apiUrl}articles/${id}`)\r\n}\r\n\r\n// SPAM\r\nexport function reportArticleSpam(id) {\r\n    return http.patch(`${apiUrl}articles/${id}/spam`)\r\n}\r\n\r\nexport function reportGifSpam(id) {\r\n    return http.patch(`${apiUrl}gifs/${id}/spam`)\r\n}\r\n\r\n\r\n// GIF\r\nexport function getGifs() {\r\n    return http.get(`${apiUrl}gifs`)\r\n}\r\nexport function getGif(id) {\r\n    return http.get(`${apiUrl}gifs/${id}`)\r\n}\r\n\r\nexport function postGif(data) {\r\n    return http.post(`${apiUrl}gifs`, data)\r\n}\r\n\r\nexport function deleteGif(id) {\r\n    return http.delete(`${apiUrl}gifs/${id}`)\r\n}\r\n\r\n// COMMENT\r\nexport function articleComment(id, data) {\r\n    return http.post(`${apiUrl}articles/${id}/comment`, data)\r\n}\r\n\r\nexport function gifComment(id, data) {\r\n    return http.post(`${apiUrl}gifs/${id}/comment`, data)\r\n}","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CreateBtn from \"./createBtn\";\r\nimport PostList from \"./postList\";\r\nimport Search from \"./common/searchPost\";\r\nimport Pagination from \"./common/pagination\";\r\nimport paginate from \"../utils/paginate\";\r\nimport { desc, asc } from \"../utils/sorting\";\r\nimport {\r\n  getAllPosts,\r\n  deleteArticle,\r\n  reportArticleSpam,\r\n  reportGifSpam,\r\n  deleteGif\r\n} from \"../services/postsServices\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    allPosts: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    sortColumn: [{ by: \"title\" }, { by: \"date\" }],\r\n    sortOrder: \"desc\",\r\n    currSort: { by: \"date\" },\r\n    search: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await getAllPosts();\r\n      this.setState({\r\n        allPosts: response.data.data\r\n      });\r\n    } catch (error) {\r\n      // const { response: err } = error;\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  handleDel = async (id, arg) => {\r\n    try {\r\n      const posts = [...this.state.allPosts];\r\n      let allPosts;\r\n      if (arg === \"article\") {\r\n        await deleteArticle(id);\r\n        allPosts = posts.filter(p => p.content && p.id !== id);\r\n      } else {\r\n        await deleteGif(id);\r\n        allPosts = posts.filter(p => p.url && p.id !== id);\r\n      }\r\n      this.setState({\r\n        allPosts\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Post has already been deleted\");\r\n    }\r\n  };\r\n\r\n  handleFlag = async (id, arg) => {\r\n    try {\r\n      if (arg === \"article\") await reportArticleSpam(id);\r\n      else await reportGifSpam(id);\r\n      const response = await getAllPosts();\r\n      this.setState({\r\n        allPosts: response.data.data\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Post has already been deleted\");\r\n    }\r\n  };\r\n\r\n  handlePag = page => {\r\n    this.setState({\r\n      currentPage: page\r\n    });\r\n  };\r\n\r\n  handleSort = currSort => {\r\n    const index = currSort.nativeEvent.target.selectedIndex;\r\n    const current = currSort.nativeEvent.target[index].value;\r\n\r\n    this.setState({\r\n      currSort: { by: current }\r\n    });\r\n  };\r\n\r\n  handleType = type => {\r\n    this.setState({\r\n      type\r\n    });\r\n  };\r\n\r\n  handleSearch = ({ currentTarget: input }) => {\r\n    const search = input.value;\r\n    this.setState({\r\n      search,\r\n      currentPage: 1\r\n    });\r\n  };\r\n\r\n  renderPosts() {\r\n    const { pageSize, currentPage, search, currSort, sortOrder } = this.state;\r\n    const { user } = this.props;\r\n    let { allPosts } = this.state;\r\n    if (this.props.match.path === \"/spam\")\r\n      allPosts = allPosts.filter(post => post.spam > 0);\r\n    if (this.state.type === \"gif\") allPosts = allPosts.filter(post => post.url);\r\n    if (this.state.type === \"article\")\r\n      allPosts = allPosts.filter(post => post.content);\r\n    else if (this.props.match.params && this.props.match.params.username)\r\n      allPosts = allPosts.filter(post => post.authorId === user.id);\r\n    const matchedPosts = allPosts.filter(post => {\r\n      return post.title.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n    });\r\n\r\n    if (currSort.by.length !== 0 && matchedPosts.length > 0) {\r\n      if (sortOrder === \"asc\") matchedPosts.sort(asc(currSort.by));\r\n      else if (sortOrder === \"desc\") matchedPosts.sort(desc(currSort.by));\r\n    }\r\n\r\n    const posts = paginate(matchedPosts, currentPage, pageSize);\r\n    return { totalCount: matchedPosts.length, posts };\r\n  }\r\n\r\n  handleSortOrder = e => {\r\n    const sortOrder = e.target.className.split(\"-\")[2].split(\" \")[0];\r\n    this.setState({\r\n      sortOrder\r\n    });\r\n  };\r\n\r\n  renderSelectSort = () => {\r\n    const { sortOrder, sortColumn } = this.state;\r\n    const ascSortClass = \"fa fa-sort-asc\";\r\n    const descSortClass = \"fa fa-sort-desc\";\r\n    const ascSort =\r\n      sortOrder === \"asc\" ? ascSortClass + \" sortBackground\" : ascSortClass;\r\n\r\n    const descSort =\r\n      sortOrder === \"desc\" ? descSortClass + \" sortBackground\" : descSortClass;\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleSort} name=\"sort\" id=\"sort\">\r\n          <option value=\"\">Sort By</option>\r\n          {sortColumn.map(row => (\r\n            <option key={row.by} value={row.by}>\r\n              {row.by}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <i onClick={this.handleSortOrder} className={ascSort}></i>\r\n        <i onClick={this.handleSortOrder} className={descSort}></i>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { pageSize, currentPage, search, type } = this.state;\r\n    const { user } = this.props;\r\n    const { totalCount, posts } = this.renderPosts();\r\n    const isPageSpam = this.props.match.path === \"/spam\" ? false : true;\r\n    return (\r\n      <div className=\"home-left\">\r\n        <CreateBtn></CreateBtn>\r\n        <div className=\"home-top\">\r\n          <Search value={search} onChange={this.handleSearch} />\r\n          <div className=\"sort\">{this.renderSelectSort()}</div>\r\n        </div>\r\n        <div className=\"type-filter\">\r\n          <p\r\n            className={type === \"\" ? \"type-filter-active\" : \"\"}\r\n            onClick={() => this.handleType(\"\")}\r\n          >\r\n            All\r\n          </p>\r\n          <p\r\n            className={type === \"gif\" ? \"type-filter-active\" : \"\"}\r\n            onClick={() => this.handleType(\"gif\")}\r\n          >\r\n            Gif\r\n          </p>\r\n          <p\r\n            className={type === \"article\" ? \"type-filter-active\" : \"\"}\r\n            onClick={() => this.handleType(\"article\")}\r\n          >\r\n            Article\r\n          </p>\r\n        </div>\r\n        <PostList\r\n          handleFlag={this.handleFlag}\r\n          handleDel={this.handleDel}\r\n          allPosts={posts}\r\n          spamPage={isPageSpam}\r\n          user={user}\r\n        />\r\n        <Pagination\r\n          size={pageSize}\r\n          length={totalCount}\r\n          currentPage={currentPage}\r\n          handlePag={this.handlePag}\r\n        ></Pagination>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","export function asc(param) {\r\n    if (param === \"date\") {\r\n        return function (a, b) {\r\n            let new_a = new Date(a.createdOn).getTime()\r\n            let new_b = new Date(b.createdOn).getTime()\r\n            if (new_a > new_b) return 1;\r\n            if (new_a < new_b) return -1;\r\n            return 0;\r\n        }\r\n    }\r\n    return function (a, b) {\r\n        if (a[param].toLowerCase() > b[param].toLowerCase()) return 1;\r\n        if (a[param].toLowerCase() < b[param].toLowerCase()) return -1;\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function desc(param) {\r\n    if (param === \"date\") {\r\n        return function (a, b) {\r\n            let new_a = new Date(a.createdOn).getTime()\r\n            let new_b = new Date(b.createdOn).getTime()\r\n            if (new_a > new_b) return -1;\r\n            if (new_a < new_b) return 1;\r\n            return 0\r\n        }\r\n    }\r\n    return function (a, b) {\r\n        if (a[param].toLowerCase() > b[param].toLowerCase()) return -1;\r\n        if (a[param].toLowerCase() < b[param].toLowerCase()) return 1;\r\n        return 0;\r\n    }\r\n}","export default function paginate(items, pageNumber, pageSize) {\r\n    let startIndex = (pageNumber - 1) * pageSize\r\n    return items.slice(startIndex, startIndex + pageSize);\r\n}","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    let username = user\r\n      ? user.username.replace(/\\s+/g, \"-\").toLowerCase()\r\n      : \"admin\";\r\n    return (\r\n      <header>\r\n        {/* <div>\r\n          <h2>\r\n            <NavLink to=\"/\">\r\n              <span id=\"app-name\">Team</span>Work\r\n            </NavLink>\r\n          </h2>\r\n        </div> */}\r\n\r\n        <div className=\"white\">\r\n          <div className=\"top\">\r\n            <div className=\"left-nav\">\r\n              <NavLink to=\"/\" className=\"home\">\r\n                {\" \"}\r\n                <span id=\"app-name\">Team</span>Work{\" \"}\r\n              </NavLink>\r\n              {user && (\r\n                <React.Fragment>\r\n                  <NavLink to=\"/logout\" className=\"nav-item\">\r\n                    Logout\r\n                  </NavLink>\r\n                  <NavLink to={`/${username}/posts`} className=\"nav-item\">\r\n                    {\" \"}\r\n                    My posts{\" \"}\r\n                  </NavLink>\r\n                </React.Fragment>\r\n              )}\r\n              {user && user.isAdmin && (\r\n                <React.Fragment>\r\n                  <NavLink to=\"/register\" className=\"nav-item\">\r\n                    Register\r\n                  </NavLink>\r\n                  <NavLink to=\"/spam\" className=\"nav-item\">\r\n                    Spam\r\n                  </NavLink>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"nav\">\r\n              <p className=\"user-name\">\r\n                <span>\r\n                  {\" \"}\r\n                  <i className=\"fa fa-user\"></i>\r\n                </span>\r\n                {user && user.username}{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        placeholder={label}\r\n        className=\"form-control\"\r\n        {...rest}\r\n      />\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, error, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} className=\"form-control\" id={name} {...rest}>\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option.id} value={option.name}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nconst TextArea = ({ name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea name={name} {...rest}></textarea>\r\n      {error && <small className=\"danger\">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({\r\n      errors: errors || {}\r\n    });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  validateProperty = (name, value) => {\r\n    const schema = { [name]: this.schema[name] };\r\n    const obj = { [name]: value };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    let value = input.value;\r\n    if (input.files) {\r\n      this.setState({\r\n        image: input.files[0]\r\n      });\r\n    }\r\n    const errors = { ...this.state.errors };\r\n    const error = this.validateProperty(input.name, value);\r\n    if (error) errors[input.name] = error;\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    data[input.name] = value;\r\n    this.setState({\r\n      data,\r\n      errors\r\n    });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return <button disabled={this.validate()}>{label}</button>;\r\n  }\r\n\r\n  selectField(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  inputField(name, label, type = \"text\", placeholder = \"\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, placeholder) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TextArea\r\n        value={data[name]}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import Joi from \"joi-browser\";\r\n\r\nconst signUpSchema = {\r\n    firstName: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"Firstname\"),\r\n    lastName: Joi.string()\r\n        .min(3)\r\n        .required()\r\n        .label(\"Lastname\"),\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .regex(/(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{7,50})$/)\r\n        .error(() => {\r\n            return {\r\n                message: \"Password must be at least 7 characters long with at least a digit\"\r\n            };\r\n        }),\r\n    address: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"Address\"),\r\n    gender: Joi.string().required(),\r\n    jobRole: Joi.string().required(),\r\n    department: Joi.string().required()\r\n}\r\n\r\nconst loginSchema = {\r\n    email: Joi.string()\r\n        .email()\r\n        .required()\r\n        .label(\"Email\"),\r\n    password: Joi.string()\r\n        .min(7)\r\n        .required()\r\n        .label(\"Password\")\r\n}\r\n\r\nconst gifSchema = {\r\n    title: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\" Gif Title\"),\r\n    image: Joi.any()\r\n        .required()\r\n        .label(\"Image/Gif\")\r\n}\r\n\r\nconst articleSchema = {\r\n    title: Joi.string()\r\n        .min(10)\r\n        .required()\r\n        .label(\"Title\"),\r\n    article: Joi.string()\r\n        .min(20)\r\n        .required()\r\n        .label(\"Article\"),\r\n    category: Joi.string()\r\n        .min(5)\r\n        .required()\r\n        .label(\"Tag\"),\r\n    id: Joi.any()\r\n}\r\n\r\nconst commentSchema = {\r\n    comment: Joi.string()\r\n        .min(5)\r\n        .required()\r\n        .label(\"Comment\")\r\n}\r\n\r\nexport function getSignUpSchema() {\r\n    return signUpSchema\r\n}\r\nexport function getLoginSchema() {\r\n    return loginSchema\r\n}\r\n\r\nexport function getGifSchema() {\r\n    return gifSchema\r\n}\r\n\r\nexport function getArticleSchema() {\r\n    return articleSchema\r\n}\r\n\r\nexport function getCommentSchema() {\r\n    return commentSchema\r\n}","import React from \"react\";\r\nimport PostInfo from \"./common/postInfo\";\r\nimport Form from \"./common/form\";\r\nimport { getCommentSchema } from \"../services/formSchema\";\r\nimport { articleComment, gifComment } from \"../services/postsServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getDate } from \"../utils/formatTime\";\r\nclass Comment extends Form {\r\n  state = {\r\n    data: { comment: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  async doSubmit() {\r\n    const { data: comment } = this.state;\r\n    try {\r\n      let response;\r\n      if (this.props.articleId)\r\n        response = await articleComment(this.props.articleId, comment);\r\n      else response = await gifComment(this.props.gifId, comment);\r\n      this.setState({\r\n        data: { comment: \"\" }\r\n      });\r\n      this.props.handleComment(response.data.data);\r\n    } catch (error) {\r\n      // const { response: err } = error;\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  schema = getCommentSchema();\r\n\r\n  render() {\r\n    const { comments } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"new_comment\">\r\n          <form action=\"\" onSubmit={this.handleSubmit}>\r\n            {this.renderTextArea(\"comment\", \"Write comment here.\")}\r\n            {this.renderButton(\"Submit\")}\r\n          </form>\r\n        </div>\r\n        <div className=\"comments\">\r\n          {comments.map(comment => (\r\n            <div key={comment.id}>\r\n              <div className=\"user_avatar\">\r\n                <img\r\n                  src=\"https://images.unsplash.com/photo-1530982011887-3cc11cc85693?ixlib=rb-1.2.1&dpr=1&auto=format&fit=crop&w=416&h=312&q=60\"\r\n                  alt=\" \"\r\n                />\r\n              </div>\r\n              <div className=\"comment_body\">\r\n                <p>{comment.comment}</p>\r\n              </div>\r\n              <PostInfo\r\n                time={getDate(comment.createdOn)[1]}\r\n                date={getDate(comment.createdOn)[0]}\r\n                username={comment.author}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"user_avatar\">\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1530982011887-3cc11cc85693?ixlib=rb-1.2.1&dpr=1&auto=format&fit=crop&w=416&h=312&q=60\"\r\n              alt=\" \"\r\n            />\r\n          </div>\r\n          <div className=\"comment_body\">\r\n            <p>\r\n              Gastropub cardigan jean shorts, kogi Godard PBR&B lo-fi locavore.\r\n              Organic chillwave vinyl Neutra. Bushwick Helvetica cred freegan,\r\n              crucifix Godard craft beer deep v mixtape cornhole Truffaut master\r\n              cleanse pour-over Odd Future beard. Portland polaroid iPhone.\r\n            </p>\r\n          </div>\r\n          <PostInfo time=\"17:37\" date=\"04/11/2019\" username=\"halim yusuf\" />\r\n\r\n          <div className=\"user_avatar\">\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1530982011887-3cc11cc85693?ixlib=rb-1.2.1&dpr=1&auto=format&fit=crop&w=416&h=312&q=60\"\r\n              alt=\" \"\r\n            />\r\n          </div>\r\n          <div className=\"comment_body\">\r\n            <p>\r\n              Gastropub cardigan jean shorts, kogi Godard PBR&B lo-fi locavore.\r\n              Organic chillwave vinyl Neutra. Bushwick Helvetica cred freegan,\r\n              crucifix Godard craft beer deep v mixtape cornhole Truffaut master\r\n              cleanse pour-over Odd Future beard. Portland polaroid iPhone.\r\n            </p>\r\n          </div>\r\n          <PostInfo time=\"17:37\" date=\"04/11/2019\" username=\"halim yusuf\" />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Comment from \"./comments\";\r\nimport { getArticle } from \"../services/postsServices\";\r\nimport PostInfo from \"./common/postInfo\";\r\n\r\nclass ArticleContent extends Component {\r\n  state = {\r\n    post: {},\r\n    comments: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const id = this.props.match.params.id;\r\n      const response = await getArticle(id);\r\n      this.setState({\r\n        post: response.data.data,\r\n        comments: response.data.data.comments\r\n      });\r\n    } catch (error) {\r\n      toast(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  handleComment = comment => {\r\n    let comments = [comment, ...this.state.comments];\r\n    this.setState({\r\n      comments\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { post, comments } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <article>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.article}</p>\r\n        </article>\r\n\r\n        <PostInfo\r\n          time={post.createdOn}\r\n          date=\"04/11/2019\"\r\n          username={user && user.username}\r\n        />\r\n\r\n        {/* {comment section} */}\r\n\r\n        <div className=\"all-comments\">\r\n          <h5>Comments</h5>\r\n          <Comment\r\n            handleComment={this.handleComment}\r\n            comments={comments}\r\n            articleId={post.articleId}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticleContent;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { saveArticle } from \"../services/postsServices\";\r\nimport { getArticleSchema } from \"../services/formSchema\";\r\nimport { getArticle } from \"../services/postsServices\";\r\n\r\nclass ArticleForm extends Form {\r\n  state = {\r\n    data: { title: \"\", article: \"\", category: \"\", id: \"\" },\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id) {\r\n      try {\r\n        let post = await getArticle(this.props.match.params.id);\r\n        post = post.data.data;\r\n        if (post) {\r\n          const data = { ...this.state.data };\r\n          data.title = post.title;\r\n          data.article = post.article;\r\n          data.category = post.category;\r\n          data.id = post.articleId;\r\n          this.setState({\r\n            data\r\n          });\r\n        }\r\n      } catch (error) {\r\n        // const { response: err } = error;\r\n        toast.error(\"Unexpected error\");\r\n      }\r\n    }\r\n  }\r\n\r\n  schema = getArticleSchema();\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await saveArticle(this.state.data);\r\n      this.props.history.push(\"/\");\r\n      toast(response.data.data.message);\r\n    } catch (error) {\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"post-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField(\"title\", \"Title\")}\r\n          {this.renderTextArea(\"article\", \"Write article here\")}\r\n          {this.inputField(\r\n            \"category\",\r\n            \"Tag\",\r\n            \"text\",\r\n            \"Separate multiple tags with +\"\r\n          )}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ArticleForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport { getGifSchema } from \"../services/formSchema\";\r\nimport { postGif } from \"../services/postsServices\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass GifForm extends Form {\r\n  state = {\r\n    data: { title: \"\", image: \"\" },\r\n    image: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  schema = getGifSchema();\r\n\r\n  doSubmit = async () => {\r\n    const data = new FormData();\r\n    data.append(\"image\", this.state.image);\r\n    data.append(\"title\", this.state.data.title);\r\n    try {\r\n      await postGif(data);\r\n      toast.success(\"GIF image successfully posted\");\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      // const { response: err } = error;\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"post-form\">\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          // action=\"http://localhost:4000/api/v1/gifs\"\r\n          // method=\"post\"\r\n        >\r\n          {this.inputField(\"title\", \"Title\")}\r\n          {this.inputField(\"image\", \"Gif/Image\", \"file\")}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GifForm;\r\n","import React, { Component } from \"react\";\r\n// import gif from \"./giphy.gif\";\r\nimport Comment from \"./comments\";\r\nimport PostInfo from \"./common/postInfo\";\r\nimport { getGif } from \"../services/postsServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getDate } from \"../utils/formatTime\";\r\n\r\nclass GifContent extends Component {\r\n  state = {\r\n    post: {},\r\n    comments: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const id = this.props.match.params.id;\r\n      const response = await getGif(id);\r\n      this.setState({\r\n        post: response.data.data,\r\n        comments: response.data.data.comments\r\n      });\r\n    } catch (error) {\r\n      // const { response: err } = error;\r\n      toast.error(\"unexpected error\");\r\n    }\r\n  }\r\n\r\n  handleComment = comment => {\r\n    let comments = [comment, ...this.state.comments];\r\n    this.setState({\r\n      comments\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { post, comments } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"gif-post\">\r\n          <p>{post.title}</p>\r\n          <img src={post.url} alt=\" \"></img>\r\n          <PostInfo\r\n            time={getDate(post.createdOn)[1]}\r\n            date={getDate(post.createdOn)[0]}\r\n            username={user && user.username}\r\n          />\r\n        </div>\r\n        <div className=\"all-comments\">\r\n          <h5>Comments</h5>\r\n          <Comment\r\n            handleComment={this.handleComment}\r\n            comments={comments}\r\n            gifId={post.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GifContent;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport auth, { loginWithJwt } from \"../services/authServices\";\r\nimport { getLoginSchema } from \"../services/formSchema\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = getLoginSchema();\r\n\r\n  async doSubmit() {\r\n    try {\r\n      const response = await auth.login(this.state.data);\r\n      loginWithJwt(response.headers[\"tw-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      let errors = { ...this.state.errors };\r\n      if (err.status === 404 && err.data.error === \"Incorrect email\") {\r\n        errors.email = \"Incorrect email\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      } else if (\r\n        err.status === 400 &&\r\n        err.data.error === \"Incorrect password\"\r\n      ) {\r\n        errors.password = \"Incorrect password\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      }\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-form\">\r\n        <div className=\"form-head\">\r\n          <h4>Login</h4>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField(\"email\", \"Email\")}\r\n          {this.inputField(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","const jobroles = [{\r\n        id: 1,\r\n        name: \"Accounting manager\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Senior developer\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Strategy manager\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"General manager\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Event manager\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Program Coordinator\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Legal counselor\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Android developer\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"IOS protection officer\"\r\n    }\r\n]\r\n\r\n\r\n\r\nconst departments = [{\r\n        id: 1,\r\n        name: \"Human Resources\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Information technology\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Accounting\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Marketing\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Customer Services\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Operations\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Production\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Finance\"\r\n    }\r\n]\r\n\r\nconst gender = [{\r\n        id: 1,\r\n        name: \"Male\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Female\"\r\n    }\r\n]\r\n\r\n\r\n\r\nexport function getJobroles() {\r\n    return jobroles\r\n}\r\n\r\nexport function getDepartments() {\r\n    return departments\r\n}\r\n\r\nexport function getGender() {\r\n    return gender\r\n}","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authServices\";\r\nimport {\r\n  getJobroles,\r\n  getDepartments,\r\n  getGender\r\n} from \"../services/signUpServices\";\r\nimport { getSignUpSchema } from \"../services/formSchema\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass SignUpForm extends Form {\r\n  state = {\r\n    data: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      address: \"\",\r\n      gender: \"\",\r\n      jobRole: \"\",\r\n      department: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n  options = {\r\n    gender: getGender(),\r\n    department: getDepartments(),\r\n    jobRole: getJobroles()\r\n  };\r\n\r\n  schema = getSignUpSchema();\r\n\r\n  async doSubmit() {\r\n    try {\r\n      await auth.register(this.state.data);\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      const { response: err } = error;\r\n      if (err.status === 400 && err.data.error === \"User with email exists\") {\r\n        let errors = { ...this.state.errors };\r\n        errors.email = \"User with email exists\";\r\n        return this.setState({\r\n          errors\r\n        });\r\n      }\r\n      toast.error(\"Unexpected error\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-form\">\r\n        <div className=\"form-head\">\r\n          <h4>Register</h4>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.inputField(\"firstName\", \"Firstname\")}\r\n          {this.inputField(\"lastName\", \"Lastname\")}\r\n          {this.inputField(\"email\", \"Email\")}\r\n          {this.inputField(\"password\", \"Password\", \"password\")}\r\n          {this.inputField(\"address\", \"Address\")}\r\n          {this.selectField(\"gender\", \"Gender\", this.options.gender)}\r\n          {this.selectField(\"jobRole\", \"Job role\", this.options.jobRole)}\r\n          {this.selectField(\r\n            \"department\",\r\n            \"Department\",\r\n            this.options.department\r\n          )}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"my-info\">\r\n        <p>\r\n          <a href=\"tel:+2347035508581\">\r\n            <i className=\"fa fa-phone\"></i>{\" \"}\r\n          </a>\r\n          <a href=\"tel:+2347035508581\">\r\n            {/* https://wa.me/2347035508581 */}\r\n            <i className=\"fa fa-whatsapp\"></i>{\" \"}\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <div className=\"footer-body\">\r\n        <p className=\"copyrights\">\r\n          <span className=\"copy\">&copy;</span> 2019 Lagos Nigeria- All Rights\r\n          Reserved\r\n        </p>\r\n        <p className=\"terms-privacy\">\r\n          {\" \"}\r\n          <Link to=\"\">Terms </Link> | <Link to=\"\">Privacy </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { removeToken } from \"../services/authServices\";\r\n\r\nconst Logout = () => {\r\n  removeToken();\r\n  window.location = \"sign-in\";\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h1>Not found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Home from \"./components/home\";\nimport Navbar from \"./components/navbar\";\nimport ArticleContent from \"./components/articleContent\";\nimport ArticleForm from \"./components/articleForm\";\nimport GifForm from \"./components/gifForm\";\nimport GifContent from \"./components/gifContent\";\nimport LoginForm from \"./components/loginForm\";\nimport SignUpForm from \"./components/signUpForm\";\nimport Footer from \"./components/footer\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport \"./footer.css\";\nimport Logout from \"./components/logout\";\nimport { getCurrentUser } from \"./services/authServices\";\nimport NotFound from \"./components/notFound\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = getCurrentUser();\n    if (user)\n      this.setState({\n        user\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div id=\"page-container\">\n        <ToastContainer />\n        <Navbar user={user}> </Navbar>{\" \"}\n        <div id=\"content-wrap\">\n          <Switch>\n            <Route path=\"/sign-in\" component={LoginForm} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route\n              path=\"/\"\n              exact\n              render={props => <Home user={user && user} {...props} />}\n            />\n            {/* delete later */}\n            {user && user.isAdmin && (\n              <Route\n                path=\"/spam\"\n                render={props => <Home user={user} {...props} />}\n              />\n            )}\n\n            {user && user.isAdmin && (\n              <Route path=\"/register\" component={SignUpForm} />\n            )}\n            {/* </React.Fragment> */}\n            {/* )} */}\n            <Route\n              path=\"/:username?/posts\"\n              render={props => <Home user={user} {...props} />}\n            />\n            <Route path=\"/edit/articles/:id\" component={ArticleForm} />\n            <Route path=\"/article/new\" component={ArticleForm} />\n            <Route path=\"/gif/new\" component={GifForm} />\n            <Route\n              path=\"/article/:id\"\n              render={props => <ArticleContent user={user} {...props} />}\n            />\n            <Route\n              path=\"/gif/:id\"\n              render={props => <GifContent user={user} {...props} />}\n            />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>{\" \"}\n        </div>{\" \"}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}